{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "b5e6bdb9",
   "metadata": {},
   "outputs": [],
   "source": [
    "import numpy as np"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "c8344e4c",
   "metadata": {},
   "source": [
    "1. Создать одномерный массив Numpy под названием a из 12 последовательных целых чисел чисел от 12 до 24 невключительно"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "aa482c1e",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23])"
      ]
     },
     "execution_count": 16,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "a = np.arange(12,24)\n",
    "a"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "b23a7d9b",
   "metadata": {},
   "source": [
    "2. Создать 5 двумерных массивов разной формы из массива a. Не использовать в аргументах метода reshape число -1.\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "id": "20558610",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[[12 13 14 15 16 17]\n",
      " [18 19 20 21 22 23]]\n",
      "--------\n",
      "[[12 13 14 15 16 17 18 19 20 21 22 23]]\n"
     ]
    }
   ],
   "source": [
    "fst = np.reshape(a, (2,6))\n",
    "sec = np.reshape(a, (6,2))\n",
    "thd = np.reshape(a, (4,3))\n",
    "forth = np.reshape(a, (12,1))\n",
    "fifth = np.reshape(a, (1,12))\n",
    "print(fst)\n",
    "print('--------')\n",
    "print(fifth)\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "51060388",
   "metadata": {},
   "source": [
    "3. Создать 5 двумерных массивов разной формы из массива a. Использовать в аргументах метода reshape число -1 (в трех примерах - для обозначения числа столбцов, в двух - для строк)."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 39,
   "id": "3ed81520",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[[12 13 14]\n",
      " [15 16 17]\n",
      " [18 19 20]\n",
      " [21 22 23]]\n",
      "-------\n",
      "[[12 13]\n",
      " [14 15]\n",
      " [16 17]\n",
      " [18 19]\n",
      " [20 21]\n",
      " [22 23]]\n"
     ]
    }
   ],
   "source": [
    "fst = np.reshape(a, (4,-1))\n",
    "sec = np.reshape(a, (6,-1))\n",
    "thd = np.reshape(a, (-1, 3))\n",
    "forth = np.reshape(a, (-1,4))\n",
    "fifth = np.reshape(a, (-1,12))\n",
    "print(thd)\n",
    "print('-------')\n",
    "print(sec)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "4fa0262d",
   "metadata": {},
   "source": [
    "4. Можно ли массив Numpy, состоящий из одного столбца и 12 строк, назвать одномерным?"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "9a1505ed",
   "metadata": {},
   "source": [
    "Да"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "ccd45c38",
   "metadata": {},
   "source": [
    "5. Создать массив из 3 строк и 4 столбцов, состоящий из случайных чисел с плавающей запятой из нормального распределения со средним, равным 0 и среднеквадратичным отклонением, равным 1.0. Получить из этого массива одномерный массив с таким же атрибутом size, как и исходный массив."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 50,
   "id": "3cf9c64a",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([0.3438891 , 0.14089328, 0.68433377, 0.00971492, 0.78786824,\n",
       "       0.84731011, 0.30984961, 0.47224953, 0.35464889, 0.68533199,\n",
       "       0.17303207, 0.17171298])"
      ]
     },
     "execution_count": 50,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "a = np.random.random(size = (3,4))\n",
    "a.flatten()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "a79ed9a3",
   "metadata": {},
   "source": [
    "6. Создать массив a, состоящий из целых чисел, убывающих от 20 до 0 невключительно с интервалом 2.\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 62,
   "id": "ca670413",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([20, 18, 16, 14, 12, 10,  8,  6,  4,  2])"
      ]
     },
     "execution_count": 62,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "a = np.arange(20,0,-2)\n",
    "a"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "1b867c51",
   "metadata": {},
   "source": [
    "7. Создать массив b, состоящий из 1 строки и 10 столбцов: целых чисел, убывающих от 20 до 1 невключительно с интервалом 2. В чем разница между массивами a и b?"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 63,
   "id": "6fe0dc14",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([20., 18., 16., 14., 12., 10.,  8.,  6.,  4.,  2.])"
      ]
     },
     "execution_count": 63,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "b = np.linspace(20,2,10)\n",
    "b\n",
    "# linspace включает крайнюю границу, а arange - нет, + linspace возвращает числа с плавающей точкой"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "9b6e5f9b",
   "metadata": {},
   "source": [
    "8. Вертикально соединить массивы a и b. a - двумерный массив из нулей, число строк которого больше 1 и на 1 меньше, чем число строк двумерного массива b, состоящего из единиц. Итоговый массив v должен иметь атрибут size, равный 10.\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 76,
   "id": "3d357065",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "10"
      ]
     },
     "execution_count": 76,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "a =np.zeros((2,2))\n",
    "b = np.ones((3,2))\n",
    "\n",
    "v = np.vstack((a, b))\n",
    "v.size"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "c559b68f",
   "metadata": {},
   "source": [
    "10\n",
    "a) Создать одномерный массив а, состоящий из последовательности целых чисел от 0 до 12. \n",
    "b) Поменять форму этого массива, чтобы получилась матрица A (двумерный массив Numpy), состоящая из 4 строк и 3 столбцов. \n",
    "c) Получить матрицу At путем транспонирования матрицы A. \n",
    "d) Получить матрицу B, умножив матрицу A на матрицу At с помощью матричного умножения. \n",
    "e) Какой размер имеет матрица B? \n",
    "f) Получится ли вычислить обратную матрицу для матрицы B и почему?\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 91,
   "id": "3e84d628",
   "metadata": {},
   "outputs": [],
   "source": [
    "a = np.arange(1,13)\n",
    "A = a.reshape((4,3))\n",
    "At =A.T\n",
    "B = np.dot(A,At)\n",
    "size = np.sqrt(B.size)\n",
    "# Получится, так как определитель B != 0 (d = np.linalg.det(B))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 92,
   "id": "58dd5ba8",
   "metadata": {},
   "outputs": [],
   "source": [
    "np.random.seed(42)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 99,
   "id": "e1734c7f",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([ 8.74736447,  2.95767129, 15.51335404, 12.40212517, 15.03198307,\n",
       "       14.31723761,  9.56639966, 14.74998776,  1.41588003,  3.1357258 ,\n",
       "        0.72363662,  5.20528529,  6.21883664,  4.34158451, 13.25980015,\n",
       "        5.70805323])"
      ]
     },
     "execution_count": 99,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "c = 16 * np.random.random(16)\n",
    "c"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.7"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
